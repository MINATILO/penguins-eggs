.\" generated with Ronn-NG/v0.8.0
.\" http://github.com/apjanke/ronn-ng/tree/0.8.0
.TH "EGGS" "1" "January 2021" "" "eggs manual"
.SH "NAME"
\fBeggs\fR \- A reproductive system for penguins
.SH "SYNOPSIS"
eggs command [\-\-flags]
.P
examples:
.P
sudo eggs prerequisites \-\-verbose
.P
sudo eggs produce \-\-verbose \-\-fast
.P
sudo eggs kill
.SH "DESCRIPTION"
eggs is a console utility, in active development, who let you to remaster your system and redistribuite it as iso image\.
.P
eggs as CLI tool have his man page but not only \- yith his two GUIs: eggs mom and eggs dad \- you can help yourself and easily learn eggs commands or get documentations\.
.SH "COMMANDS"
Full list eggs commands and flags\.
.SH "eggs adapt"
adapt monitor resolution for VM only
.IP "" 4
.nf
adapt monitor resolution for VM only

USAGE
  $ eggs adapt

OPTIONS
  \-h, \-\-help     show CLI help
  \-v, \-\-verbose

ALIASES
  $ eggs adjust
.fi
.IP "" 0
.SH "eggs autocomplete [shell]"
display autocomplete installation instructions
.IP "" 4
.nf
display autocomplete installation instructions

USAGE
  $ eggs autocomplete [shell]

ARGUMENTS
  shell shell type

OPTIONS
  \-r, \-\-refresh\-cache  Refresh cache (ignores displaying instructions)

EXAMPLES
  $ eggs autocomplete
  $ eggs autocomplete bash
  $ eggs autocomplete zsh
  $ eggs autocomplete \-\-refresh\-cache
.fi
.IP "" 0
.SH "eggs calamares"
calamares or install or configure it
.IP "" 4
.nf
calamares or install or configure it

USAGE
  $ eggs calamares

OPTIONS
  \-f, \-\-final    final: remove eggs prerequisites, calamares and all it\'s dependencies
  \-h, \-\-help     show CLI help
  \-i, \-\-install  install calamares and it\'s dependencies
  \-v, \-\-verbose
  \-\-theme=theme  theme/branding for eggs and calamares

EXAMPLES
  ~$ sudo eggs calamares
  create/renew calamares configuration\'s files

  ~$ sudo eggs calamares \-i
  install calamares and create it\'s configuration\'s files
.fi
.IP "" 0
.SH "eggs dad"
ask for daddy (gui interface)!
.IP "" 4
.nf
ask for daddy (gui interface)!

USAGE
  $ eggs dad

OPTIONS
  \-h, \-\-help     show CLI help
  \-v, \-\-verbose
.fi
.IP "" 0
.SH "eggs export:deb"
export package eggs\-v7\-x\-x\-1\.deb in the destination host
.IP "" 4
.nf
export package eggs\-v7\-x\-x\-1\.deb in the destination host

USAGE
  $ eggs export:deb

OPTIONS
  \-a, \-\-armel  copy armel arch
  \-c, \-\-clean  remove old \.deb before to copy
  \-h, \-\-help   show CLI help
.fi
.IP "" 0
.SH "eggs export:docs"
remove and export docType documentation of the sources in the destination host
.IP "" 4
.nf
remove and export docType documentation of the sources in the destination host

USAGE
  $ eggs export:docs

OPTIONS
  \-h, \-\-help  show CLI help
.fi
.IP "" 0
.SH "eggs export:iso"
export iso in the destination host
.IP "" 4
.nf
export iso in the destination host

USAGE
  $ eggs export:iso

OPTIONS
  \-c, \-\-clean  delete old ISOs before to copy
  \-h, \-\-help   show CLI help
.fi
.IP "" 0
.SH "eggs help [COMMAND]"
display help for eggs
.IP "" 4
.nf
display help for <%= config\.bin %>

USAGE
  $ eggs help [COMMAND]

ARGUMENTS
  COMMAND  command to show help for

OPTIONS
  \-\-all  see all commands in CLI
.fi
.IP "" 0
.SH "eggs info"
informations about system and eggs
.IP "" 4
.nf
informations about system and eggs

USAGE
  $ eggs info

EXAMPLE
  $ eggs info
  You will find here informations about penguin\'s eggs!
.fi
.IP "" 0
.SH "eggs install"
eggs installer \- (the egg became penguin)
.IP "" 4
.nf
eggs installer \- (the egg became penguin)

USAGE
  $ eggs install

OPTIONS
  \-c, \-\-cli        try to use antiX installer (cli)
  \-g, \-\-gui        use Calamares installer (gui)
  \-h, \-\-info       show CLI help
  \-l, \-\-lvmremove  remove lvm /dev/pve
  \-m, \-\-mx         try to use MX installer (gui)
  \-u, \-\-umount     umount devices
  \-v, \-\-verbose    verbose

ALIASES
  $ eggs hatch

EXAMPLE
  $ eggs install
  Install the system with eggs cli installer(default)
.fi
.IP "" 0
.SH "eggs kill"
kill the eggs/free the nest
.IP "" 4
.nf
kill the eggs/free the nest

USAGE
  $ eggs kill

OPTIONS
  \-h, \-\-help     show CLI help
  \-v, \-\-verbose  verbose

EXAMPLE
  $ eggs kill
  kill the eggs/free the nest
.fi
.IP "" 0
.SH "eggs mom"
ask for mommy (gui interface)!
.IP "" 4
.nf
ask for mommy (gui interface)!

USAGE
  $ eggs mom

OPTIONS
  \-c, \-\-cli   force cli version of mommy
  \-h, \-\-help  show CLI help
.fi
.IP "" 0
.P
\fISee code: src/commands/mom\.ts \fI\%https://github\.com/pieroproietti/penguins\-eggs/blob/v7\.7\.9/src/commands/mom\.ts\fR\fR
.SH "eggs prerequisites"
install packages prerequisites to run eggs
.IP "" 4
.nf
install packages prerequisites to run eggs

USAGE
  $ eggs prerequisites

OPTIONS
  \-c, \-\-check    check prerequisites
  \-h, \-\-help     show CLI help
  \-v, \-\-verbose  verbose

EXAMPLES
  ~$ eggs prerequisites
  install prerequisites and create configuration files

  sudo eggs prerequisites \-c
    create configuration\'s file
.fi
.IP "" 0
.SH "eggs produce"
the system produce an egg: livecd creation\.
.IP "" 4
.nf
the system produce an egg: livecd creation\.

USAGE
  $ eggs produce

OPTIONS
  \-b, \-\-basename=basename  basename egg
  \-f, \-\-fast               fast compression
  \-h, \-\-help               show CLI help
  \-m, \-\-max                max compression
  \-n, \-\-normal             max compression
  \-s, \-\-script             script mode\. Generate scripts to manage iso build
  \-v, \-\-verbose            verbose
  \-y, \-\-yolk               \-y force yolk renew
  \-\-adapt                  adapt video resolution in VM
  \-\-final                  final: remove eggs prerequisites, calamares and all it\'s dependencies
  \-\-ichoice                allows the user to choose the installation type cli/gui
  \-\-pve                    administration of virtual machines (Proxmox\-VE)
  \-\-rsupport               remote support via dwagent
  \-\-theme=theme            theme/branding for eggs and calamares

ALIASES
  $ eggs spawn
  $ eggs lay

EXAMPLES
  $ sudo eggs produce
  produce an ISO called [hostname]\-[arch]\-YYYY\-MM\-DD_HHMM\.iso, compressed xz (standard compression)\.
  If hostname=ugo and arch=i386 ugo\-x86\-2020\-08\-25_1215\.iso

  $ sudo eggs produce \-v
  the same as the previuos, but with more explicative output

  $ sudo eggs produce \-vf
  the same as the previuos, compression lz4 (fast compression, but about 30%
  less compressed compared xz standard)

  $ sudo eggs produce \-vc
  the same as the previuos, compression xz \-Xbcj x86 (max compression, about 10%
  more compressed compared xz standard)

  $ sudo eggs produce \-vf \-\-basename leo \-\-theme debian \-\-adapt
  produce an ISO called leo\-i386\-2020\-08\-25_1215\.iso compression lz4,
  using Debian theme and link to adapt

  $ sudo eggs produce \-v \-\-basename leo \-\-theme debian \-\-adapt
  produce an ISO called leo\-i386\-2020\-08\-25_1215\.iso compression xz,
  using Debian theme and link to adapt

  $ sudo eggs produce \-v \-\-basename leo \-\-rsupport
  produce an ISO called leo\-i386\-2020\-08\-25_1215\.iso compression xz, using eggs
  theme and link to dwagent

  $ sudo eggs produce \-vs \-\-basename leo \-\-rsupport
  produce scripts to build an ISO as the previus example\. Scripts can be found
  in /home/eggs/ovarium and you can customize all you need
.fi
.IP "" 0
.SH "eggs remove"
remove eggs, eggs configurations, prerequisites, calamares, calamares configurations
.IP "" 4
.nf
remove eggs, eggs configurations, prerequisites, calamares, calamares configurations

USAGE
  $ eggs remove

OPTIONS
  \-a, \-\-all            remove all
  \-h, \-\-help           show CLI help
  \-p, \-\-prerequisites  remove eggs packages prerequisites
  \-v, \-\-verbose        verbose
  \-\-purge              remove eggs, eggs configuration

ALIASES
  $ eggs sterilize

EXAMPLES
  $ sudo eggs remove
  remove eggs

  $ sudo eggs remove \-\-purge
  remove eggs, eggs configurations

  $ sudo eggs remove \-\-prerequisites
  remove packages prerequisites, calamares, calamares configurations

  $ sudo eggs remove \-\-all
  remove eggs, eggs configurations, prerequisites, calamares, calamares configurations
.fi
.IP "" 0
.SH "eggs tools:clean"
clean system log, apt, etc
.IP "" 4
.nf
clean system log, apt, etc

USAGE
  $ eggs tools:clean

OPTIONS
  \-h, \-\-help     show CLI help
  \-v, \-\-verbose  verbose
.fi
.IP "" 0
.SH "eggs tools:initrd"
Test initrd
.IP "" 4
.nf
Test initrd

USAGE
  $ eggs tools:initrd

OPTIONS
  \-h, \-\-help     show CLI help
  \-v, \-\-verbose
  \-\-check=check  check if necessary to clean initrd\.img
  \-\-clean=clean  clean the initrd\.img
.fi
.IP "" 0
.SH "eggs tools:locales"
install/clean locales
.IP "" 4
.nf
install/clean locales

USAGE
  $ eggs tools:locales

OPTIONS
  \-h, \-\-help       show CLI help
  \-r, \-\-reinstall  reinstall locales
  \-v, \-\-verbose    verbose
.fi
.IP "" 0
.SH "eggs tools:pve"
enable/start/stop pve\-live
.IP "" 4
.nf
enable/start/stop pve\-live

USAGE
  $ eggs tools:pve

OPTIONS
  \-d, \-\-disable  disable
  \-e, \-\-enable   enable
  \-h, \-\-help     show CLI help
  \-v, \-\-verbose  stop service
  \-\-start        start
  \-\-stop         stop service
.fi
.IP "" 0
.SH "eggs tools:sanitize"
sanitize
.IP "" 4
.nf
sanitize

USAGE
  $ eggs tools:sanitize

OPTIONS
  \-h, \-\-help  show CLI help
.fi
.IP "" 0
.SH "eggs tools:skel"
update skel from home configuration
.IP "" 4
.nf
update skel from home configuration

USAGE
  $ eggs tools:skel

OPTIONS
  \-h, \-\-help       show CLI help
  \-u, \-\-user=user  user to be used
  \-v, \-\-verbose

EXAMPLE
  $ eggs skel \-\-user mauro
  desktop configuration of user mauro will get used as default
.fi
.IP "" 0
.SH "eggs tools:yolk"
configure eggs to install without internet
.IP "" 4
.nf
configure eggs to install without internet

USAGE
  $ eggs tools:yolk

OPTIONS
  \-h, \-\-help     show CLI help
  \-v, \-\-verbose

EXAMPLE
  $ eggs yolk \-v
.fi
.IP "" 0
.SH "eggs update"
update the penguin\'s eggs tool\.
.IP "" 4
.nf
update the penguin\'s eggs tool\.
This method always works, both with npm and deb packages\.

USAGE
  $ eggs update

OPTIONS
  \-a, \-\-apt      if eggs package is \.deb, update from distro repositories
  \-b, \-\-basket   if eggs package is \.deb, update from eggs basket
  \-h, \-\-help     show CLI help
  \-n, \-\-npm      if eggs package is \.npm, update from npmjs\.com
  \-v, \-\-verbose  verbose

DESCRIPTION
  This method always works, both with npm and deb packages\.

EXAMPLE
  $ eggs update
  update/upgrade the penguin\'s eggs tool
.fi
.IP "" 0
.SH "FILE"
.nf
  /etc/penguins\-eggs\.d
    all eggs configurations are here

  /usr/local/share/penguins\-eggs/exclude\.list
    exclude\.list rsync

  /usr/lib/penguins\-eggs (deb package)
    here eggs is installed
  OR
  /usr/lib/node_modules/penguins\-eggs/ (npm package)
    here eggs is installed
.fi
.SH "TROUBLES"
Different versions of eggs can have differents configurations files\. This can lead to get errors\. A fast workaround for this trouble can be download eggs, remove eggs, remove it\'s configurations, reinstall new version and run sudo eggs prerequisites:
.P
\fBsudo eggs update\fR # select basket, choose the version and download it but not install!
.P
\fBsudo apt \-\-purge eggs\fR # remove eggs
.P
\fBsudo rm /usr/penguins\-eggs/ rf\fR # remove eggs
.P
\fBsudo rm /etc/penguins\-eggs\.d \-rf\fR # remove eggs configurations files
.P
\fBsudo dpkg \-i /tmp/eggs_7\.7\.9\-1_amd64\.deb\fR # install eggs from downloaded package
.P
\fBsudo eggs prerequisites\fR # check prerequisites and generate configuration\'s files
.SH "BUGS"
See GitHub Issues: \fI\%https://github\.com/pieroproietti/penguins\-eggs/issues\fR
.SH "RESOURCES AND DOCUMENTATION"
Website: \fBhttps://penguins\-eggs\.net\fR
.P
Documentation: \fBhttps://penguins\-eggs\.net/book\fR
.P
GitHub repository & Issue Tracker: \fBgithub\.com/pieroproietti/penguins\-eggs\fR
.SH "AUTHOR"
Piero Proietti \fI\%mailto:piero\.proietti@gmail\.com\fR
