/**
 *
 */
export function automirror(): string {
    let text = ''
    text += `#!/usr/bin/env python3\n`
    text += `# Copyright (C) 2018 Simon Quigley <tsimonq2@ubuntu.com>\n`
    text += `#\n`
    text += `# This program is free software: you can redistribute it and/or modify\n`
    text += `# it under the terms of the GNU General Public License as published by\n`
    text += `# the Free Software Foundation, either version 3 of the License, or\n`
    text += `# (at your option) any later version.\n`
    text += `#\n`
    text += `# This program is distributed in the hope that it will be useful,\n`
    text += `# but WITHOUT ANY WARRANTY; without even the implied warranty of\n`
    text += `# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n`
    text += `# GNU General Public License for more details.\n`
    text += `#\n`
    text += `# You should have received a copy of the GNU General Public License\n`
    text += `# along with this program. If not, see <http://www.gnu.org/licenses/>.\n`
    text += `\n`
    text += `import json\n`
    text += `import libcalamares\n`
    text += `from time import strftime\n`
    text += `import urllib.request\n`
    text += `from urllib.error import HTTPError\n`
    text += `from urllib.error import URLError\n`
    text += `import socket\n`
    text += `import logging\n`
    text += `from lsb_release import get_distro_information\n`
    text += `\n`
    text += `global sources\n`

    text += `sources = """# Automatically generated by Calamares on DATE.\n`
    text += `# Lines starting with "deb" are mandatory, while lines starting with "deb-src"\n`
    text += `# are for more detailed package information.\n`
    text += `\n`
    text += `## repo per linuxmint ulyana\n`
    text += `deb http://packages.linuxmint.com ulyana main upstream import backport #id:linuxmint_main\n`
    text += `## See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to\n`
    text += `## newer versions of DISTRIBUTION.\n`
    text += `deb URL/ubuntu/ CODENAME main restricted\n`
    text += `# deb-src URL/ubuntu/ CODENAME main restricted\n`
    text += `\n`
    text += `## Major bug fix updates produced after the final release of DISTRIBUTION.\n`
    text += `## Have you noticed a regression? Please report it!\n`
    text += `## https://wiki.ubuntu.com/StableReleaseUpdates#Regressions\n`
    text += `deb URL/ubuntu/ CODENAME-updates main restricted\n`
    text += `# deb-src URL/ubuntu/ CODENAME-updates main restricted\n`
    text += `\n`
    text += `## Software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu team.\n`
    text += `## Also, please note that software in Universe WILL NOT receive any review or\n`
    text += `## updates from the Ubuntu security team directly. Updates in this repository\n`
    text += `## are provided by volunteers, but most come from Debian.\n`
    text += `deb URL/ubuntu/ CODENAME universe\n`
    text += `# deb-src URL/ubuntu/ CODENAME universe\n`
    text += `deb URL/ubuntu/ CODENAME-updates universe\n`
    text += `# deb-src URL/ubuntu/ CODENAME-updates universe\n`
    text += `\n`
    text += `## Software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu team,\n`
    text += `## and may not be under a free licence. Please satisfy yourself as your rights\n`
    text += `## to use the software. Also, please note that software in Multiverse WILL NOT\n`
    text += `## receive any review or updates from the Ubuntu security team directly.\n`
    text += `deb URL/ubuntu/ CODENAME multiverse\n`
    text += `# deb-src URL/ubuntu/ CODENAME multiverse\n`
    text += `deb URL/ubuntu/ CODENAME-updates multiverse\n`
    text += `# deb-src URL/ubuntu/ CODENAME-updates multiverse\n`
    text += `\n`
    text += `## Software from this repository contains tested security updates from the\n`
    text += `## Ubuntu security team.\n`
    text += `deb http://security.ubuntu.com/ubuntu CODENAME-security main restricted\n`
    text += `# deb-src http://security.ubuntu.com/ubuntu CODENAME-security main restricted\n`
    text += `deb http://security.ubuntu.com/ubuntu CODENAME-security universe\n`
    text += `# deb-src http://security.ubuntu.com/ubuntu CODENAME-security universe\n`
    text += `deb http://security.ubuntu.com/ubuntu CODENAME-security multiverse\n`
    text += `# deb-src http://security.ubuntu.com/ubuntu CODENAME-security multiverse\n`
    text += `\n`
    text += `## Software from this repository may not have been tested as extensively as\n`
    text += `## software contained in the main release, although it includes newer versions\n`
    text += `## of some applications which may provide useful features. Also, please note\n`
    text += `## that software in Backports WILL NOT receive any review or updates from the\n`
    text += `## Ubuntu security team.\n`
    text += `deb URL/ubuntu/ CODENAME-backports main restricted universe multiverse\n`
    text += `# deb-src URL/ubuntu/ CODENAME-backports main restricted universe multiverse\n`
    text += `\n`
    text += `## Uncomment the following two lines to add software from Canonical's\n`
    text += `## "partner" repository.\n`
    text += `## This software is not part of Ubuntu, but is offered by Canonical and the\n`
    text += `## respective vendors as a service to Ubuntu users.\n`
    text += `# deb http://archive.canonical.com/ubuntu CODENAME partner\n`
    text += `# deb-src http://archive.canonical.com/ubuntu CODENAME partner"""\n`
    
    text += `\n`
    text += `SUBDOMAINS_BY_COUNTRY_CODE = {"US": "us.",\n`
    text += `                              "AU": "au.",\n`
    text += `                              "SE": "no.",\n`
    text += `                              "NO": "no.",\n`
    text += `                              "NZ": "nz.",\n`
    text += `                              "NL": "nl.",\n`
    text += `                              "KR": "kr.",\n`
    text += `                              "DE": "de.",\n`
    text += `                              "GE": "ge.",\n`
    text += `                              "PF": "pf.",\n`
    text += `                              "CZ": "cz.",\n`
    text += `                              "HR": "hr."}\n`
    text += `\n`
    text += `def getcountrycode():\n`
    text += `    """\n`
    text += `    Return the two-letter country code or an empty string.\n`
    text += `\n`
    text += `    Tries to determine the country code based on the public IP address,\n`
    text += `    if the device is connected to the Internet. Otherwise it returns\n`
    text += `    an empty string.\n`
    text += `    """\n`
    text += `    if libcalamares.globalstorage.value("hasInternet"):\n`
    text += `        geoipurl = libcalamares.job.configuration["geoip"]["url"]\n`
    text += `        try:\n`
    text += `            with urllib.request.urlopen(geoipurl, timeout=75) as http_response:\n`
    text += `                localedata = json.loads(http_response.read().decode())\n`
    text += `        except HTTPError as http_error:\n`
    text += `            logging.http_error("Data not retrieved because %s - URL: %s",\n`
    text += `                               http_error, geoipurl)\n`
    text += `        except URLError as url_error:\n`
    text += `            if isinstance(url_error.reason, socket.timeout):\n`
    text += `                logging.error("Socket timed out - URL %s", geoipurl)\n`
    text += `            else:\n`
    text += `                logging.error("Non-timeout protocol error.")\n`
    text += `        else:\n`
    text += `            logging.info("Country successfully determined.")\n`
    text += `            return localedata["country"]\n`
    text += `    else:\n`
    text += `        return ""\n`
    text += `def get_subdomain_by_country(countrycode):\n`
    text += `    """Return the subdomain for the given countrycode\n`
    text += `    or an empty string.\n`
    text += `    """\n`
    text += `    if countrycode in SUBDOMAINS_BY_COUNTRY_CODE.keys():\n`
    text += `        return SUBDOMAINS_BY_COUNTRY_CODE[countrycode]\n`
    text += `    else:\n`
    text += `        return ""\n`
    text += `\n`
    text += `def getcodename():\n`
    text += `    """Return the codename of the distribution, similar to lsb_release -cs"""\n`
    text += `    return get_distro_information()["CODENAME"]\n`
    text += `\n`
    text += `def changesources(subdomain):\n`
    text += `    """Replace the placeholders and then create the sources.list"""\n`
    text += `    distro = libcalamares.job.configuration["distribution"]\n`
    text += `    url = "http://{}{}".format(subdomain,\n`
    text += `libcalamares.job.configuration["baseUrl"])\n`
    text += `\n`
    text += `    global sources\n`
    text += `    sources = sources.replace("DISTRIBUTION", distro)\n`
    text += `    sources = sources.replace("CODENAME", getcodename())\n`
    text += `    sources = sources.replace("URL", url)\n`
    text += `    sources = sources.replace("DATE", strftime("%Y-%m-%d"))\n`
    text += `\n`
    text += `    filepath = libcalamares.globalstorage.value("rootMountPoint")\n`
    // text += `    filepath += "/etc/apt/sources.list"\n`
    text += `    filepath += "official-package-repositories.list\n`
    text += `    with open(filepath, "r+") as sourcesfile:\n`
    text += `        sourcesfile.seek(0)\n`
    text += `        sourcesfile.write(sources)\n`
    text += `        sourcesfile.truncate()\n`
    text += `\n`
    text += `def run():\n`
    text += `    """Autoselect a mirror and create the sources.list file."""\n`
    text += `    countrycode = getcountrycode()\n`
    text += `    subdomain = get_subdomain_by_country(countrycode)\n`
    text += `\n`
    text += `    changesources(subdomain)\n`

    return text
}
